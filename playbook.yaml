- name: Setup Janus and Configure Firewall
  hosts: all
  become: yes
  gather_facts: yes
  serial: 1  # Run the playbook on one server at a time

  vars_files:
    - sudo_pass.yaml

  tasks:
    - name: Install necessary packages
      apt:
        name:
          - nginx
          - certbot
          - python3-pip
          - ufw
        state: present
        update_cache: yes

    - name: Enable UFW
      ufw:
        state: enabled

    - name: Allow SSH (Port 22)
      ufw:
        rule: allow
        port: "22"
        proto: tcp

    - name: Allow HTTP (80) & HTTPS (443) from specific IPs
      ufw:
        rule: allow
        proto: tcp
        port: "{{ item.port }}"
        from_ip: "{{ item.ip }}"
      loop:
        - { port: "80", ip: "84.32.10.128" }
        - { port: "443", ip: "84.32.10.128" }
        - { port: "80", ip: "141.11.103.161" }
        - { port: "443", ip: "141.11.103.161" }
        - { port: "80", ip: "87.248.145.57" }
        - { port: "443", ip: "87.248.145.57" }
        - { port: "80", ip: "185.97.118.126" }
        - { port: "443", ip: "185.97.118.126" }
        - { port: "80", ip: "94.101.178.8" }
        - { port: "443", ip: "94.101.178.8" }
        - { port: "80", ip: "65.109.192.16" }
        - { port: "443", ip: "65.109.192.16" }

    - name: Allow Port 9180 only from 46.245.84.67
      ufw:
        rule: allow
        proto: tcp
        port: "9180"
        from_ip: "46.245.84.67"

    - name: Set UFW default policies (Deny incoming, Allow outgoing)
      ufw:
        direction: incoming
        policy: deny

    - name: Allow outgoing traffic
      ufw:
        direction: outgoing
        policy: allow

    - name: Reload UFW
      command: ufw reload

    - name: Check UFW status
      command: ufw status verbose
      register: ufw_status

    - name: Display UFW status
      debug:
        msg: "{{ ufw_status.stdout }}"

    - name: Configure Docker Daemon
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "insecure-registries": ["https://docker.arvancloud.ir"],
            "registry-mirrors": ["https://docker.arvancloud.ir"],
            "iptables": false
          }
        mode: '0644'
      notify: Restart Docker

    - name: Restart Docker Service
      systemd:
        name: docker
        state: restarted

  handlers:
    - name: Restart Docker
      systemd:
        name: docker
        state: restarted